@using Microsoft.AspNet.Identity
@model IEnumerable<CreativeSandbox.Models.Room>
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Sandbox</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <script src="~/signalr/hubs"></script>
</head>
<body>
    @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
    {
        @Html.AntiForgeryToken()
    }
    <div class="row row-header">
        <div class="col-lg-3 col-md-3 col-sm-4">
            <a href="@Url.Action("Index","Home")"><img src="~/Content/images/logo.png" class="img-responsive" /></a>
        </div>
        <div class="col-lg-offset-7 col-md-offset-7 col-sm-offset-6 col-lg-2">
            <div class="dropdown">
                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" style="border:0px">
                    @User.Identity.GetUserName()
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                    <li><a href="javascript:document.getElementById('logoutForm').submit()">Log Out</a></li>
                </ul>
            </div>
        </div>
    </div>
<div class="container">
    <div class="row" style="margin-top:10px; display:flex; align-items:center;">
        <div class="col-lg-2 col-lg-offset-4 text-center">
            <span>WorkRooms</span>
        </div>
        <div class="col-lg-2">
            <button id="addRoomButton" class="btn btn-success">Add Room</button>
        </div>
    </div>
    <div class="col-lg-10 col-lg-offset-1" id="room">
        @foreach (var room in Model)
        {
            <div class="row room-row" id="@room.Id" style="margin-top:10px;">
                <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1 text-center">
                    id: @room.Id
                </div>
                <div class="col-lg-8 col-md-8 col-sm-8 col-xs-8" style="padding: 10px;">
                    <input class="form-control" id="@room.Id" value="@room.Name" />
                </div>
                <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1 usersIn text-center" id="@room.Id">
                    @room.UsersIn
                </div>
                <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1">
                    <button onClick="location.href ='Room?id=@room.Id'" class="btn btn-enter" id="@room.Id">Enter</button>
                </div>
                <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1">
                    <button class="btn btn-danger" onclick="requestDeleteRoom(@room.Id);" id="@room.Id">X</button>
                </div>
            </div>
        }
    </div>
</div>
    <script>
         $(function () {

             var chat = $.connection.sandBoxHub;
             var chat1 = $.connection.roomHub;

             chat.client.changeRoomName = function (id, name) {
                 $(".form-control").filter("#" + id).val(name);
             };

             chat.client.deleteRoom = function (id) {
                 document.getElementById(id).remove();
             };

             chat.client.erorDeleteRoom = function (id, name) {
                 alert("Sory, but you can't delete this room now. Try it later.")
             };

             chat.client.updateUsersInRoom = function (id, usersIn) {
                 $(".usersIn").filter("#" + id).text(usersIn);
             };

             chat1.client.updateUsersInRoom = function (id, usersIn) {
                 $(".usersIn").filter("#" + id).text(usersIn);
             };

             requestDeleteRoom = function (id) {
                 chat.server.deleteRoom(id);
             };

             chat.client.receiveRoom = function (id, name, usersIn) {
                 var roomRow = document.getElementById("room");

                 var roomNode = document.createElement("div");
                 roomNode.setAttribute("class", "row room-row");
                 roomNode.setAttribute("id", id);
                 roomNode.setAttribute("style", "margin-top:10px;");

                 var idNode = document.createElement("div");
                 idNode.setAttribute("class", "col-lg-1 col-md-1 col-sm-1 col-xs-1 text-center")
                 idNode.appendChild(document.createTextNode("id: " + id))

                 var formNode = document.createElement("div");
                 formNode.setAttribute("class", "col-lg-8 col-md-8 col-sm-8 col-xs-8")
                 formNode.setAttribute("style", "padding:10px;");

                 var inputFormNode = document.createElement("input");
                 inputFormNode.setAttribute("class", "form-control");
                 inputFormNode.setAttribute("value", name);
                 inputFormNode.setAttribute("id", id);
                 inputFormNode.onchange = function () {
                     chat.server.changeRoomName(this.id, this.value);
                 };

                 formNode.appendChild(inputFormNode);

                 var usersInNode = document.createElement("div");
                 usersInNode.setAttribute("class", "col-lg-1 col-md-1 col-sm-1 col-xs-1 usersIn text-center")
                 usersInNode.setAttribute("id", id)
                 usersInNode.appendChild(document.createTextNode(usersIn))

                 var enterNode = document.createElement("div");
                 enterNode.setAttribute("class", "col-lg-1 col-md-1 col-sm-1 col-xs-1");

                 var enterButtonNode = document.createElement("button");
                 enterButtonNode.setAttribute("onclick", "location.href ='Room?id=" + id + "'");
                 enterButtonNode.setAttribute("class", "btn btn-enter");
                 enterButtonNode.setAttribute("id", id)
                 enterButtonNode.appendChild(document.createTextNode("Enter"));

                 enterNode.appendChild(enterButtonNode);

                 var deleteNode = document.createElement("div");
                 deleteNode.setAttribute("class", "col-lg-1 col-md-1 col-sm-1 col-xs-1");

                 var deleteButtonNode = document.createElement("button");
                 deleteButtonNode.setAttribute("onclick", "requestDeleteRoom(" + id + ");");
                 deleteButtonNode.setAttribute("class", "btn btn-danger");
                 deleteButtonNode.setAttribute("id", id)
                 deleteButtonNode.appendChild(document.createTextNode("X"));

                 deleteNode.appendChild(deleteButtonNode);

                 roomNode.appendChild(idNode);
                 roomNode.appendChild(formNode);
                 roomNode.appendChild(usersInNode);
                 roomNode.appendChild(enterNode);
                 roomNode.appendChild(deleteNode);

                 roomRow.appendChild(roomNode);
             };

             $.connection.hub.start().done(function () {
                 $('#addRoomButton').click(function () {
                     chat.server.addRoom();
                 });

                 $('.form-control').change(function () {
                     chat.server.changeRoomName(this.id, this.value);
                 });
             });
         });
    </script>
</body>
</html>
